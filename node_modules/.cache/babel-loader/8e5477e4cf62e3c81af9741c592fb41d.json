{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Typography,Button,Card,CardActions,CardContent,CardMedia}from'@material-ui/core';import useStyles from'./styles';var CartItem=function CartItem(_ref){var item=_ref.item,onUpdateCartQty=_ref.onUpdateCartQty,onRemoveFromCart=_ref.onRemoveFromCart;var classes=useStyles();var handleUpdateCartQty=function handleUpdateCartQty(lineItemId,newQuantity){return onUpdateCartQty(lineItemId,newQuantity);};var handleRemoveFromCart=function handleRemoveFromCart(lineItemId){return onRemoveFromCart(lineItemId);};return/*#__PURE__*/_jsxs(Card,{className:\"cart-item\",children:[/*#__PURE__*/_jsx(CardMedia,{image:item.media.source,alt:item.name,className:classes.media}),/*#__PURE__*/_jsxs(CardContent,{className:classes.cardContent,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",children:item.name}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:item.line_total.formatted_with_symbol})]}),/*#__PURE__*/_jsxs(CardActions,{className:classes.cardActions,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.buttons,children:[/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"small\",onClick:function onClick(){return handleUpdateCartQty(item.id,item.quantity-1);},children:\"-\"}),/*#__PURE__*/_jsxs(Typography,{style:{backgroundColor:'black',opacity:'50%'},children:[\"\\xA0\",item.quantity,\"\\xA0\"]}),/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"small\",onClick:function onClick(){return handleUpdateCartQty(item.id,item.quantity+1);},children:\"+\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",type:\"button\",color:\"secondary\",onClick:function onClick(){return handleRemoveFromCart(item.id);},children:\"Remove\"})]})]});};export default CartItem;","map":{"version":3,"sources":["/Users/CRN/VSCode-workspace/auteurfilm/jahndoe-app/jahndoesite/src/Components/Cart/CartItem/CartItem.jsx"],"names":["React","Typography","Button","Card","CardActions","CardContent","CardMedia","useStyles","CartItem","item","onUpdateCartQty","onRemoveFromCart","classes","handleUpdateCartQty","lineItemId","newQuantity","handleRemoveFromCart","media","source","name","cardContent","line_total","formatted_with_symbol","cardActions","buttons","id","quantity","backgroundColor","opacity"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,MAArB,CAA6BC,IAA7B,CAAmCC,WAAnC,CAAgDC,WAAhD,CAA6DC,SAA7D,KAA8E,mBAA9E,CAEA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiD,IAA9CC,CAAAA,IAA8C,MAA9CA,IAA8C,CAAxCC,eAAwC,MAAxCA,eAAwC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CAChE,GAAMC,CAAAA,OAAO,CAAGL,SAAS,EAAzB,CAEA,GAAMM,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,UAAD,CAAaC,WAAb,QAA6BL,CAAAA,eAAe,CAACI,UAAD,CAAaC,WAAb,CAA5C,EAA5B,CAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACF,UAAD,QAAgBH,CAAAA,gBAAgB,CAACG,UAAD,CAAhC,EAA7B,CAGA,mBACE,MAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,wBACE,KAAC,SAAD,EAAW,KAAK,CAAEL,IAAI,CAACQ,KAAL,CAAWC,MAA7B,CAAqC,GAAG,CAAET,IAAI,CAACU,IAA/C,CAAqD,SAAS,CAAEP,OAAO,CAACK,KAAxE,EADF,cAEE,MAAC,WAAD,EAAa,SAAS,CAAEL,OAAO,CAACQ,WAAhC,wBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,UAA0BX,IAAI,CAACU,IAA/B,EADF,cAEE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,UAA0BV,IAAI,CAACY,UAAL,CAAgBC,qBAA1C,EAFF,GAFF,cAME,MAAC,WAAD,EAAa,SAAS,CAAEV,OAAO,CAACW,WAAhC,wBACE,aAAK,SAAS,CAAEX,OAAO,CAACY,OAAxB,wBACE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,OAA3B,CAAmC,OAAO,CAAE,yBAAMX,CAAAA,mBAAmB,CAACJ,IAAI,CAACgB,EAAN,CAAUhB,IAAI,CAACiB,QAAL,CAAgB,CAA1B,CAAzB,EAA5C,eADF,cAEE,MAAC,UAAD,EAAY,KAAK,CAAE,CAACC,eAAe,CAAC,OAAjB,CAA0BC,OAAO,CAAC,KAAlC,CAAnB,kBAAoEnB,IAAI,CAACiB,QAAzE,UAFF,cAGE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,OAA3B,CAAmC,OAAO,CAAE,yBAAMb,CAAAA,mBAAmB,CAACJ,IAAI,CAACgB,EAAN,CAAUhB,IAAI,CAACiB,QAAL,CAAgB,CAA1B,CAAzB,EAA5C,eAHF,GADF,cAME,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,KAAK,CAAC,WAAhD,CAA4D,OAAO,CAAE,yBAAMV,CAAAA,oBAAoB,CAACP,IAAI,CAACgB,EAAN,CAA1B,EAArE,oBANF,GANF,GADF,CAiBD,CAzBD,CA2BA,cAAejB,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\n  const classes = useStyles();\n\n  const handleUpdateCartQty = (lineItemId, newQuantity) => onUpdateCartQty(lineItemId, newQuantity);\n\n  const handleRemoveFromCart = (lineItemId) => onRemoveFromCart(lineItemId);\n\n \n  return (\n    <Card className=\"cart-item\">\n      <CardMedia image={item.media.source} alt={item.name} className={classes.media} />\n      <CardContent className={classes.cardContent}>\n        <Typography variant=\"h4\">{item.name}</Typography>\n        <Typography variant=\"h5\">{item.line_total.formatted_with_symbol}</Typography>\n      </CardContent>\n      <CardActions className={classes.cardActions}>\n        <div className={classes.buttons}>\n          <Button type=\"button\" size=\"small\" onClick={() => handleUpdateCartQty(item.id, item.quantity - 1)}>-</Button>\n          <Typography style={{backgroundColor:'black', opacity:'50%'}}>&nbsp;{item.quantity}&nbsp;</Typography>\n          <Button type=\"button\" size=\"small\" onClick={() => handleUpdateCartQty(item.id, item.quantity + 1)}>+</Button>\n        </div>\n        <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={() => handleRemoveFromCart(item.id)}>Remove</Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}